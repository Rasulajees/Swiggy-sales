--Create database
USE Project

--view Table
SELECT* 
FROM Customers

--Tasks
--1. Display all customers who live in "Delhi"

SELECT
    name, city
FROM
    Customers
WHERE
    city='Delhi'
-------------------------------------------------------------

--2. find the average rating of all restaurants in 'Mumbai'

SELECT
    ROUND(AVG(COALESCE(rating,0)),2) AS avg_rating
FROM
    restaurants
WHERE
    city='Mumbai'
------------------------------------------------------------------

--3. List all customers who have placed at least one order.

SELECT
    C.Customer_id,
    C.name,
    COUNT(O.order_id) AS total_orders_placed
FROM
    Customers C
        JOIN
    orders O ON C.Customer_id = O.Customer_id
GROUP BY 
    C.Customer_id,
    C.name
ORDER BY 
    C.Customer_id;
------------------------------------------------------------------------

--4.Display the total number of orders placed by each Customer.

SELECT
    C.Customer_id,
    C.name,
    COUNT(O.order_id) AS total_orders_placed
FROM
    Customers C 
        JOIN
    orders O ON C.Customer_id = O.Customer_id
GROUP BY 
    C.Customer_id, 
    C.name
ORDER BY 
    total_orders_placed DESC;
-------------------------------------------------------------------------

--5. Find the total revenue generated by each restaurant.

SELECT
    R.restaurant_id,
    R.name AS Restaurant_name,
    COALESCE(SUM(O.total_amount),0) AS total_revenue
FROM
    Restaurants R
        LEFT JOIN
    Orders O ON R.restaurant_id = O.restaurant_id
GROUP BY
    R.restaurant_id,
    R.name;
------------------------------------------------------------------------

--6. Find the top 5 restaurants with the highest avarage rating.

SELECT
    name AS Restaurant_name,
    ROUND(AVG(COALESCE(rating, 0)), 2) AS ratings
FROM
    Restaurants
GROUP BY
    name
ORDER BY
    ROUND(AVG(COALESCE(rating, 0)), 2) DESC
OFFSET 5 ROWS FETCH NEXT 5 ROWS ONLY; --limit 5 rows only
---------------------------------------------------------------------

--7. Display all customers who have never placed an order.

SELECT
    C.customer_id,
    C.name AS customer_name,
    O.order_id AS total_orders_placed
FROM
    Customers C
    LEFT JOIN Orders O ON C.customer_id = O.customer_id
WHERE
    O.order_id IS NULL;
---------------------------------------------------------------------

--8. Find the number of orders placed by eaach customer in 'Mumbai'.

SELECT
    C.customer_id,
    C.name AS customer_name,
    C.city AS city,
    COUNT(O.order_id) AS total_orders_placed
FROM
    Customers C
    LEFT JOIN Orders O ON C.customer_id = O.customer_id
WHERE
    C.city = 'Mumbai'
GROUP BY 
    C.customer_id,
    C.name,
    C.city;  -- Added C.city to the GROUP BY clause
---------------------------------------------------------------------------------------

--9. Display all orders placed in the last 30 days.

SELECT
    C.customer_id,
    C.name,
    O.order_id,
    O.order_date
FROM
    Customers C
    LEFT JOIN Orders O ON C.customer_id = O.customer_id
WHERE
    O.order_date >= DATEADD(DAY, -30, '2024-08-15')
ORDER BY
    O.order_date;
---------------------------------------------------------------------------------

--10. List all delevery partners who have completed more than 1 delevery.

SELECT
    DP.partner_id,
    DP.name,
    COUNT(OD.partner_id) AS delivery_Count
FROM
    deliverypartners AS DP
JOIN
    orderdelivery AS OD ON DP.partner_id = OD.partner_id
GROUP BY 
    DP.partner_id,
    DP.name
HAVING
    COUNT(OD.partner_id) > 1;
------------------------------------------------------------------------------

--11. Find the customers who have placed oreders on exactly three different days.

SELECT
    c.customer_id,
    c.name,
    COUNT(DISTINCT O.order_date) AS order_days
FROM
    Customers C
        LEFT JOIN
    Orders O ON C.customer_id = O.customer_id
GROUP BY
    c.customer_id,
    c.name
HAVING
    COUNT(DISTINCT O.order_date) =3;
--------------------------------------------------------------------------

--12. Find the delivery partner who has worked with the most diffrernt customers.

SELECT
    DP.partner_id,
    DP.name,
    COUNT(O.customer_id) AS customers
FROM
    DeliveryPartners AS DP
JOIN
    OrderDelivery OD ON DP.partner_id = OD.partner_id
JOIN
    Orders O ON O.order_id = OD.order_id
GROUP BY
    DP.partner_id,
    DP.name
ORDER BY
    customers DESC
OFFSET 1 ROW FETCH NEXT 1 ROW ONLY;